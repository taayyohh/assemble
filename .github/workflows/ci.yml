name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run forge --version
        run: forge --version

      - name: Auto-format code
        run: forge fmt

      - name: Run forge fmt --check
        run: forge fmt --check
        id: fmt

      - name: Run forge build
        run: forge build --sizes
        id: build

      - name: Run forge test
        run: forge test -vvv
        id: test

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Slither
        run: |
          pip3 install slither-analyzer
          slither --version

      - name: Run Slither Analysis
        run: |
          slither . --exclude-dependencies --exclude-informational --exclude-optimization --fail-on medium
        continue-on-error: false

      - name: Run Slither with JSON output
        run: |
          slither src/ --json slither-report.json --disable-color || true

      - name: Upload Slither Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: slither-report
          path: |
            slither-report.md
            slither-report.json

      - name: Run Gas Report
        run: forge test --gas-report > gas-report.txt

      - name: Upload Gas Report
        uses: actions/upload-artifact@v3
        with:
          name: gas-report
          path: gas-report.txt

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install Python and Slither
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer

      - name: Run Slither Security Checks
        run: |
          slither src/ \
            --exclude-dependencies \
            --exclude-optimization \
            --exclude-informational \
            --exclude-low \
            --checklist \
            --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/

      - name: Run Slither Detailed Analysis
        run: |
          echo "## 🔍 Slither Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### High/Medium Severity Issues:" >> $GITHUB_STEP_SUMMARY
          slither src/ --print human-summary >> $GITHUB_STEP_SUMMARY || true 